name: Build and Push Docker Image

# Trigger the workflow on push and pull_request events for Dev and Prd branches
on:
  push:
    branches:
      - Dev
      - Prd
  pull_request:
    branches:
      - Dev
      - Prd

jobs:
  build:
    runs-on: ubuntu-latest  # Define the runner environment (Ubuntu)

    steps:
      # Step 1: Checkout the repository to the working directory
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub using secrets stored in GitHub Secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username from GitHub secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password from GitHub secrets

      # Step 3: Set up environment variables based on the branch name
      - name: Set up environment variables
        env:
          DEV_PORT: ${{ vars.DEV_PORT }}  # Development port from GitHub variables
          PRD_PORT: ${{ vars.PRD_PORT }}  # Production port from GitHub variables
        run: |
          ENV_FILE="./.env"  # Define the .env file to store the environment variables
          echo "" > "$ENV_FILE"  # Clear the content of the .env file

          # Extract the branch name and set it to uppercase for prefix matching
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}" | tr '[:lower:]' '[:upper:]')
          PREFIX="${BRANCH_NAME}_"

          # Loop through environment variables that match the branch-specific prefix
          for var in $(env | grep "^$PREFIX"); do
            var_name=$(echo "$var" | cut -d '=' -f 1)  # Extract variable name
            value=$(echo "$var" | cut -d '=' -f 2-)  # Extract variable value
            name="${var_name#$PREFIX}"  # Remove the prefix to get the clean variable name
            echo "$name=$value" >> "$ENV_FILE"  # Append the variable to the .env file
          done
          export $(cat "$ENV_FILE" | xargs)  # Export the environment variables for the subsequent steps

      # Step 4: List files in the repository for debugging purposes
      - name: List files in the directory
        run: ls -al

      # Step 5: Build and push the Docker image based on the branch name
      - name: Build and Push Docker Image
        run: |
          SHORT_SHA=${GITHUB_SHA::7}  # Get the first 7 characters of the Git commit SHA for tagging

          # Set the Docker image tag based on the branch (Dev or Prd)
          if [[ "${GITHUB_REF}" == "refs/heads/Dev" ]]; then
            TAG="dev-$SHORT_SHA"  # Tag for Dev branch
          elif [[ "${GITHUB_REF}" == "refs/heads/Prd" ]]; then
            TAG="prd-$SHORT_SHA"  # Tag for Prd branch
          else
            echo "Branch not handled. Skipping Docker build."  # If the branch is neither Dev nor Prd
            exit 1  # Exit the workflow with an error if the branch is not handled
          fi

          # Build the Docker image with the appropriate tag and push it to Docker Hub
          docker build -t ${{ secrets.DOCKER_USERNAME }}/laytharfaoui/front:$TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/laytharfaoui/front:$TAG
